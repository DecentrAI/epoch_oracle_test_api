steps:
  # Step 1: Clone the main repository including submodules
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', '--recurse-submodules', 'hhttps://github.com/DecentrAI/epoch_oracle_test_api.git', '.']
    dir: 'workspace'

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/simple_epoch_oracle_test_api', '.']
    dir: 'workspace'

  # Step 3: Push the image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/simple_epoch_oracle_test_api']
    dir: 'workspace'

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - 'simple_epoch_oracle_test_api-service'  # Cloud Run service name
    - '--image'
    - 'gcr.io/$PROJECT_ID/simple_epoch_oracle_test_api' # our above defined image
    - '--region'
    - '$LOCATION'  # desired region
    - '--set-env-vars' # each env var must be defined in the GCP trigger Substitution variables
    - > # use YAML block scalar for the env vars to avoid quoting issues
      NGROK_AUTH_TOKEN=$_NGROK_AUTH_TOKEN, 
      NGROK_DOMAIN=$_NGROK_DOMAIN,
    - '--allow-unauthenticated' # free for all API
    - '--port' # the container port not the service port
    - '8000'
    # - '--memory'
    # - '2Gi'     # increase memory limit from basic of 512MB
    # - '--cpu'
    # - '2'       # increase CPU limit from basic of 1
    # - '--min-instances'
    # - '1'    # set the minimum number of instances to 1 to make sure the service is always on
    # - '--max-instances'
    # - '1'    # set the maximum number of instances to 1 to accomodate singleton behaviour
    
    # Additional Cloud Run configurations can be added here

images:
  - 'gcr.io/$PROJECT_ID/simple_epoch_oracle_test_api'
